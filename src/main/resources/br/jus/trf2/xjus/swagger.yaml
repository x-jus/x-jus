swagger: '2.0'

info:
  version: "1.0.0"
  title: Xjus
  description: Micro-serviço para realizar buscas textuais e controlar o processo de indexação

basePath: /api/v1
schemes: [http,https]
consumes: [application/json, application/x-www-form-urlencoded]
produces: [application/json]

tags:
  - name: dashboard
    description: Painel de Controle
  - name: query
    description: Busca Textual
  - name: index
    description: Controle da Indexação
  - name: task
    description: Automação da montagem dos índices

paths:
  /user:
    get:
      description: Indica se o usuário está autenticado ou não e se é administrador
      tags: [dashboard]
      parameters: []
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              user:
                $ref: "#/definitions/User"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"
  /index/{idx}/query:
    get:
      description: Retorna lista de registros encontrados. A lista será ordenada por relevância. Os registros que não tiverem ACL=PUBLIC serão acessandos somente se a autenticação JWT possuir um campo ACL com algum perfil em comum com o registro.
      tags: [query]
      parameters:
        - $ref: "#/parameters/idx"
        - $ref: "#/parameters/filter"
        - $ref: "#/parameters/facets"
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/perpage"
        - $ref: "#/parameters/acl"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              count:
                $ref: "#/definitions/Count"
              facets:
                type: array
                items:
                  $ref: "#/definitions/Facet"
              results:
                type: array
                items:
                  $ref: "#/definitions/Record"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"
  /index/{idx}/status:
    get:
      description: Retorna o status do índice
      tags: [query]
      parameters:
        - $ref: "#/parameters/idx"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              count:
                $ref: "#/definitions/Count"
              buildCount:
                $ref: "#/definitions/Count"
              buildLastId:
                $ref: "#/definitions/LastId"
              buildLastDate:
                $ref: "#/definitions/LastDate"
              refreshLastId:
                $ref: "#/definitions/LastId"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"

  /index/{idx}/record/{id}:
    get:
      description: Obtem informações sobre determinado item, a partir de uma id. Os registros que não tiverem ACL=PUBLIC serão acessandos somente se a autenticação JWT possuir um campo ACL com algum perfil em comum com o registro.
      tags: [query]
      parameters:
        - $ref: "#/parameters/idx"
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              id:
                $ref: "#/definitions/Id"
              object:
                $ref: "#/definitions/Object"
              acl:
                $ref: "#/definitions/Acl"
              refresh:
                $ref: "#/definitions/Refresh"
              url:
                $ref: "#/definitions/Url"
              code:
                $ref: "#/definitions/Code"
              title:
                $ref: "#/definitions/Title"
              content:
                $ref: "#/definitions/Content"
              field:
                type: array
                items:
                  $ref: "#/definitions/Field"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"

  /index/{idx}/record:
    post:
      description: Obtem informações sobre determinado item, a partir de uma id. Os registros que não tiverem ACL=PUBLIC serão acessandos somente se a autenticação JWT possuir um campo ACL com algum perfil em comum com o registro. FALTA RESOLVER A QUESTÃO DO REQUESTBODY!
      tags: [index]
      parameters: 
        - $ref: "#/parameters/idx"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              id:
                $ref: "#/definitions/Id"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"
  /index/{idx}/record/{id}/reindex:
    post:
      description: Invalida o registro e marca ele para ser reindexado
      tags: [index]
      parameters: 
        - $ref: "#/parameters/idx"
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/sync"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              id:
                $ref: "#/definitions/Id"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"
            
  /task/build-step:
    get:
      description: Cria um task de build para cada um dos índices ativos
      tags: [task]
      parameters: []
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              status:
                $ref: "#/definitions/Status"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"

  /task/{idx}/build-step:
    post:
      description: Se não houver um número muito grande de tasks na lista, chama o webservice de registros para obter a próxima lista de IDs, ordenada pela data da última alteração, atualizada o progresso e cria um task para buscar o registro de cada uma das IDs
      tags: [task]
      parameters:
        - $ref: "#/parameters/idx"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              status:
                $ref: "#/definitions/Status"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"

  /task/refresh-step:
    get:
      description: Cria um task de refresh-step para cada um dos índices ativos
      tags: [task]
      parameters: []
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              status:
                $ref: "#/definitions/Status"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"

  /task/{idx}/refresh-step:
    post:
      description: Se não houver um número muito grande de tasks na lista, chama o webservice de registros para obter a próxima lista de IDs, ordenada por ID, atualizada o progresso e cria um task para buscar o registro de cada uma das IDs
      tags: [task]
      parameters:
        - $ref: "#/parameters/idx"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              status:
                $ref: "#/definitions/Status"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"

  /task/{idx}/record/{id}/refresh:
    post:
      description: Força a recarga de um item, ou indica que um novo item deve ser indexado
      tags: [task]
      parameters:
        - $ref: "#/parameters/idx"
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/sync"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              id:
                $ref: "#/definitions/Id"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/Error"

parameters:
  filter:
    name: filter
    in: query
    description: String que representa a busca textual a ser realizada.
    required: true
    type: string
  facets:
    name: facets
    in: query
    description: String que contém as facetas para refinamento da busca separadas por vírgula.
    required: false
    type: string
  page:
    name: page
    in: query
    description: Número da página.
    required: true
    type: string
  perpage:
    name: perpage
    in: query
    description: Quantidade de itens por página.
    required: true
    type: string
  acl:
    name: acl
    in: query
    description: Perfis que devem ser incluídos na busca, separados por ponto e vírgula. Se não for informado, será utilizado PUBLIC ou a ACL do Authorization header, se for um JWT válido.
    required: false
    type: string
  id:
    name: id
    in: path
    description: String que identifica um item, normalmente uma concatenação do tipo do item seguida de ':' e o número do identificar do item formatado com zeros à esquerda.
    required: true
    type: string
  dt:
    name: dt
    in: path
    description: String que representa uma data.
    required: true
    type: string
    format: date-time
  sync:
    name: sync
    in: query
    description: Indica se a operação deve ser realizada imediatamente ou de foarma assíncrona.
    required: false
    type: boolean
  object:
    name: object
    in: path
    description: String que identifica um tipo de objeto, utilizado para identificar coleções de objetos.
    required: true
    type: string
  idx:
    name: idx
    in: path
    description: String que identifica um índice.
    required: true
    type: string
  descr:
    name: descr
    in: formData
    description: Descrição do índice.
    required: true
    type: string
  api:
    name: api
    in: formData
    description: URL da API onde o índice buscará os registros.
    required: true
    type: string
  token:
    name: token
    in: formData
    description: Token JWT da API onde o índice buscará os registros.
    required: true
    type: string
  active:
    name: active
    in: formData
    description: Habilita ou desabilita o índice.
    required: true
    type: boolean
  maxBuild:
    name: maxBuild
    in: formData
    description: Número máximo de IDs que pode ser retornado em uma consulta. Considerando que a cada minuto a aplicação verifica se existem novos itens a serem acrescidos ao índice, esse número também reflete a velocidade que o índice é contruido, em itens por minuto.
    required: true
    type: string
  maxRefresh:
    name: maxRefresh
    in: formData
    description: Número máximo de IDs que pode ser retornado em uma consulta. Considerando que a cada minuto a aplicação verifica se existem novos itens a serem acrescidos ao índice, esse número também reflete a velocidade que o índice é revisado, em itens a cada 10 minutos.
    required: true
    type: string
  secret:
    name: secret
    in: formData
    description: Segredo para validar a autenticação JWT e proteger o índice de acessos indevidos.
    required: false
    type: string

definitions:
  Id:
    type: string
    description: String que identifica um item, normalmente uma concatenação do tipo do item seguida de ':' e o número do identificar do item formatado com zeros à esquerda.
    example: documento:000000000123
    
  Name:
    type: string
    description: String que representa um nome.
    example: Renato
    
  Object:
    description: Objecto que deve ser indexado. Geralmente será informado o mesmo nome de objeto que está no início da ID, antes dos dois-pontos.
    type: string      
    example: documento
    
  Acl:
    description: Lista, separada por vírgulas, de controle de acesso que indica se o item deve ou não ser incluído no resultado da busca em função das credenciais de acesso do usuário em questão. Itens públicos deverão ser marcados com PUBLIC.
    type: string      
    example: PUBLIC

  Refresh:
    description: Indica se a informação pode sofrer alteração e deve ser reindexada ou se não sofre alteração. As opções são OFTEN, SELDOM e NEVER.
    type: string      
    example: NEVER
    
  Url:
    description: URL que para onde o usuário deve ser direcionado quando clicar no resultado da busca.
    type: string      
    example: https://siga.jfrj.jus.br/permalink/TRF2MEM2018000001
    
  Code:
    description: Código do item que deve ser apresentado no resultado da busca.
    type: string      
    example: TRF2-MEM-2018/000001
    
  Title:
    description: Título que deve ser apresentado no resultado da busca.
    type: string      
    example: Memorando de marcação de férias para Renato
    
  Content:
    description: Texto que deve ser indexado para a busca.
    type: string      
    example: Batatinha quando nasce espalha a rama pelo chão. menininha quando dorme põe a mão no coração. O bolso furou e o papai caiu no chão. Mamãe que é mais querida ficou no coração.

  Snippet:
    description: Trecho do texto que ressalta as palavras encontradas na busca.
    type: string      
    example: ...espalha a <b>rama</b> pelo chão...

  Idx:
    description: Identificador do índice
    type: string      
    example: jurisprudencia-eproc
  Descr:
    description: Descrição do índice
    type: string      
    example: Jurisprudência no eproc v2
  Api:
    description: API onde serão buscados os registros.
    type: string      
    example: http://teste.com/api/v1
  Token:
    description: Token JWT da API onde serão buscados os registros.
    type: string      
    example: abc.de.fg
  Active:
    description: Se o índice está ativo ou não
    type: boolean
    example: true
  MaxBuild:
    description: Quantidade de registros que podem ser recuperado de uma só vez na Record API para changed-references
    type: string
    example: 50
  MaxRefresh:
    description: Quantidade de registros que podem ser recuperado de uma só vez na Record API para all-references
    type: string
    example: 50
  Secret:
    description: Segredo que protege a autenticação e as ACLs
    type: string
    example: 50
  Records:
    description: Quantidade de registros no índice
    type: string      
    example: 1234
  LastDate:
    description: Última data que foi submetido à Record API
    type: string      
    format: date-time      
    example: 2018-05-02T01:02:03.456-02:00
  LastId:
    description: Última ID que foi indexada
    type: string      
    example: 0000001
  Timestamp:
    description: Data e hora da última indexação
    type: string
    format: date-time
    example: 2018-05-02T01:02:03.456-02:00
  Status:
    description: Identificador do status índice
    type: string      
    example: Indexando...

  Count:
    description: Contador
    type: number
    example: 123
    
  Complete:
    description: Indica se o processo foi concluído
    type: boolean
    example: false
    
  RefinementToken:
    description: Identificador da faceta para restringir a busca
    type: string      
    example: AAABBBCCC

  Field:
    type: object
    properties:
      name:
        type: string
        description: Nome do campo
      kind:
        type: string
        description: Tipo do campo, os valores possíveis são TEXT, KEYWORD, LONG, FLOAT, DATE, BOOLEAN e BINARY.
      value:
        type: string
        description: Valor do campo
    example:
      name: idade
      kind: LONG
      value: 42
      
  SearchIndex:
    type: object
    properties:
      idx:
        $ref: "#/definitions/Idx"
      descr:
        $ref: "#/definitions/Descr"
      api:
        $ref: "#/definitions/Api"
      token:
        $ref: "#/definitions/Token"
      active:
        $ref: "#/definitions/Active"
      maxBuild:
        $ref: "#/definitions/MaxBuild"
      maxRefresh:
        $ref: "#/definitions/MaxRefresh"
      secret:
        $ref: "#/definitions/Secret"
      records:
        $ref: "#/definitions/Records"
      buildRecords:
        $ref: "#/definitions/Records"
      buildLastCount:
        $ref: "#/definitions/Records"
      buildLastDate:
        $ref: "#/definitions/LastDate"
      buildLastId:
        $ref: "#/definitions/LastId"
      refreshLastId:
        $ref: "#/definitions/LastId"
      refreshTimestamp:
        $ref: "#/definitions/Timestamp"
      refreshComplete:
        $ref: "#/definitions/Complete"
  Facet:
    type: object
    properties:
      name:
        $ref: "#/definitions/Name"
      values:
        type: array
        items:
          $ref: "#/definitions/FacetValue"

  FacetValue:
    type: object
    properties:
      name:
        $ref: "#/definitions/Name"
      count:
        $ref: "#/definitions/Count"
      refinementToken:
        $ref: "#/definitions/RefinementToken"

  Record:
    type: object
    properties:
      id:
        $ref: "#/definitions/Id"
      object:
        $ref: "#/definitions/Object"
      acl:
        $ref: "#/definitions/Acl"
      refresh:
        $ref: "#/definitions/Refresh"
      url:
        $ref: "#/definitions/Url"
      code:
        $ref: "#/definitions/Code"
      title:
        $ref: "#/definitions/Title"
      content:
        $ref: "#/definitions/Content"
      field:
        type: array
        items:
          $ref: "#/definitions/Field"

  User:
    type: object
    properties:
      gmail:
        type: string
        description: Email do usuário logado na forma usr@gmail.com
      admin:
        type: boolean
        description: Indica se o usuário é administrador
      loginUrl:
        type: string
        description: URL que deve ser utilizada para fazer o login
      logoutUrl:
        type: string
        description: URL que deve ser utilizada para fazer o login
    example:
      gmail: usr@gmail.com
      admin: false
      loginUrl: https://google.com/login
      logoutUrl: https://google.com/logout

  Error:
    type: object
    properties:
      errormsg:
        type: string
    example:
      error: Não foi possível realizar a operação
